import Tools.Misc;import java.util.*;
class Monster
{
    String name;
    int health;int ogh;
    String look;
    int moves;
    ArrayList<Card> arr=new ArrayList<Card>(){{}};
String msg="";
public Monster(int diff)
    {
        for(int i=0;i<5;i++)
{
arr.add(Card.gen());
}
       String a="";char ch='a';
       char[] vow={'a','e','i','o','u'};
       while(Misc.vowel(ch))
       {
        ch=(char)(98+(int)(Math.random()*25));
        }
        a+=ch;
        ch='a';
       a+=vow[(int)(Math.random()*5)];
       a+=vow[(int)(Math.random()*5)];
       
       while(Misc.vowel(ch))
       {
        ch=(char)(98+(int)(Math.random()*25));
        }
        a+=ch;
        a+=vow[(int)(Math.random()*5)];
        ch='a';
       while(Misc.vowel(ch))
       {
        ch=(char)(98+(int)(Math.random()*25));
        }
        a+=ch;
        name=a;
        health=(int)(Math.random()*(diff*5.5))+5;
        ogh=health;
        String  hat[]={"/\\","^^","AA","=="};
        String face[]={"oo","oO","O0","UU"};
        String body[]={"()","[]","/\\"};String x="|";
        if(Math.random()>0.7){x="8";}else if(Math.random()>0.8){x="!";}
        look=" "+hat[(int)(Math.random()*hat.length)]+"\n"+x+face[(int)(Math.random()*face.length)]+x+"\n|"+body[(int)(Math.random()*body.length)]+"|\n\\__/";
        //System.out.println(name);System.out.println(health);
        //System.out.println(look);
        moves=0;
    }
    public void update(player a,char ch,int val)
    {
    if(ch=='d'){health=health+val>ogh?ogh:health+val;}
    else{a.hth-=val;}
    }
    public int choose(player a)
    {int max=0;int maxind=-1;int i=0;
    if(health<=ogh/2.3)
    {
        if(a.hth-this.choose2(a,0)<=0){return this.choose2(a,1);}
    for( i=0;i<arr.size();i++)
    {
    if(arr.get(i).ch=='d' && arr.get(i).val>=max){max=arr.get(i).val;maxind=i;}
    }
    if(maxind!=-1){health=health+max>ogh?ogh:health+max;
        this.arr.remove((maxind));
        msg=name+" regenerated by"+max;return 0;}
    //else if((maxind==-1) && arr.size()<5){arr.add(Card.gen());msg=name+" regened a new card";return 0;}
    else if(arr.size()==0 || (maxind==-1 && arr.size()<5)){arr.add(Card.gen());msg=name+" regened a new card";return 0;}
    else {return this.choose2(a,1);}
    }
    else{return this.choose2(a,1);}
    }
    public int choose2(player a, int test)
    {
    int max=-10;int maxind=-1;int i=0;
    
    for( i=0;i<arr.size();i++)
    {
    if(arr.get(i).ch=='a' && arr.get(i).val>=max){max=arr.get(i).val;maxind=i;}
    }
    
     if(maxind!=-1){a.hth-=max;
         if(test==1){arr.remove(arr.get(maxind));}
         msg=name+" attacked by"+max;}
     else if((maxind==-1) && arr.size()<5){arr.add(Card.gen());msg=name+" regened a new card";max=0;}
    
   return max;
}   
}
